plugins {
  id 'java'
  id 'org.springframework.boot' version '3.1.1'
  id 'io.spring.dependency-management' version '1.1.0'
  id 'org.graalvm.buildtools.native' version '0.9.23'
}

apply plugin: 'java'

group = 'org.springframework.samples'
version = '3.1.0'
sourceCompatibility = '17'

repositories {
  mavenCentral()
}

ext.webjarsFontawesomeVersion = "4.7.0"
ext.webjarsBootstrapVersion = "5.2.3"

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-cache'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'javax.cache:cache-api'
  implementation 'jakarta.xml.bind:jakarta.xml.bind-api'

  // for neo4j, tpk
  implementation 'org.springframework.boot:spring-boot-starter-data-neo4j'

//implementation 'org.springframework.data.neo4j.config'
//implementation 'org.springframework.data.neo4j.core'
//implementation 'org.springframework.data.neo4j.core.convert'
//implementation 'org.springframework.data.neo4j.core.support'
//implementation 'org.springframework.data.neo4j.core.transaction'
//implementation 'org.springframework.data.neo4j.repository'
//implementation 'org.springframework.data.neo4j.repository.config'
//implementation 'org.springframework.data.neo4j.repository.support'
//implementation 'org.neo4j.driver:neo4j-java-driver-spring-boot-starter:4.3.6.0'
//implementation 'org.neo4j.driver:neo4j-java-driver:5.6.0'
//implementation 'org.neo4j.driver:neo4j-java-driver'
//compileOnly group: 'org.springframework', name: 'spring-tx', version: '5.2.7.RELEASE'
//implementation 'org.springframework.transaction.ReactiveTransactionManager'

  // swagger, spring doc, tpk
  implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
//implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui'

  // lombok, tpk
  compileOnly 'org.projectlombok:lombok'
  //developmentOnly 'org.springframework.boot:spring-boot-devtools'
  annotationProcessor 'org.projectlombok:lombok'

  runtimeOnly 'org.springframework.boot:spring-boot-starter-actuator'
  runtimeOnly "org.webjars.npm:bootstrap:${webjarsBootstrapVersion}"
  runtimeOnly "org.webjars.npm:font-awesome:${webjarsFontawesomeVersion}"
  runtimeOnly 'com.github.ben-manes.caffeine:caffeine'
  runtimeOnly 'com.h2database:h2'
  runtimeOnly 'com.mysql:mysql-connector-j'
  runtimeOnly 'org.postgresql:postgresql'
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.boot:spring-boot-testcontainers'
  testImplementation 'org.springframework.boot:spring-boot-docker-compose'
  testImplementation 'org.testcontainers:junit-jupiter'
  testImplementation 'org.testcontainers:mysql'
}

tasks.named('test') {
  useJUnitPlatform()
}
